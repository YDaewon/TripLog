1. 유저 회원가입
input: userId, userPwd, userName, userNickname, userEmail(id+domain), userImage
output: 1
sql: insert into users (user_id, user_pwd, user_name, nickname, email_id, email_domain, userImage)

1-1. 아이디 중복 체크(비동기)
input: userId
output: 1 or 0
sql: SELECT count(*) FROM users WHERE user_id = #{userId}

1-2 유저 로그인
input: userId, userPwd
output: 1
sql: SELECT * FROM users WHERE user_id = #{userId} AND user_pwd = #{userPwd}

1-3 유저 상세 페이지
input: userNo
output: 1
sql: SELECT user_no, user_id, user_pwd, user_name, nickname, email_id, email_domain, admin, created_at, deleted_at, user_image FROM users

1-4 유저 정보 수정
input:(MAP) userNo, userPwd, userNickname, userEmail(id+domain), admin, admin_check, userImage
output: 1
sql: UPDATE users 
<trim prefix="set" suffixOverrides=",">
    <if test="userPwd != null">user_pwd = #{userPwd},</if>
    <if test="userNickname != null">nickname = #{userNickname},</if>
    <if test="emailId != null">email_id = #{emailId},</if>
    <if test="emailDomain != null">email_domain = #{emailDomain},</if>
    <if test="userImage != null">user_image = #{userImage},</if>
    <if test="admin != null and admin_check != 0">admin = #{admin}</if>
</trim>
where user_no = #{userNo}

1-5 유저 정보 삭제
input: userNo
output: 1
sql: UPDATE users set deleted_at = CURRENT_TIMESTAMP where  user_no= #{userNo}

1-6 유저 리스트
input: x
output: List<UserDto>
sql: select * from users;


